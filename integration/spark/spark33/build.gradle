plugins {
    id("io.openlineage.common-java-config")
    id("io.openlineage.print-source-set-configuration")
    id("io.openlineage.scala213-variant")
    id("io.openlineage.standard-spotless")
    id("io.freefair.lombok") version "8.4"
}

lombok {
    version = "1.18.30"
}

ext {
    assertjVersion = "3.25.1"
    junit5Version = "5.10.1"
    mockitoVersion = "4.11.0"
    sparkVersion = "3.3.4"
    jacksonVersion = "2.15.3"
    lombokVersion = "1.18.30"
    icebergVersion = "0.14.1"
}

configurations.configureEach {
    // https://github.com/apache/spark/pull/38355 - can be remove for Spark 3.3.2
    resolutionStrategy {
        // https://github.com/FasterXML/jackson-databind/issues/3627
        force "com.fasterxml.jackson:jackson-bom:$jacksonVersion"
    }
}

dependencies {
    implementation(project(path: ":shared"))
    implementation(project(path: ":spark3"))

    compileOnly("org.apache.spark:spark-core_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    compileOnly("org.apache.iceberg:iceberg-spark-runtime-3.3_2.12:${icebergVersion}")

    testImplementation("org.apache.spark:spark-core_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    testImplementation("org.apache.iceberg:iceberg-spark-runtime-3.3_2.12:${icebergVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation("org.mockito:mockito-inline:${mockitoVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")

    scala213Implementation(project(path: ":shared", configuration: "scala213RuntimeElements"))
    scala213Implementation(project(path: ":spark3"))

    scala213CompileOnly("org.apache.spark:spark-core_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.iceberg:iceberg-spark-runtime-3.3_2.13:${icebergVersion}")

    testScala213Implementation("org.apache.spark:spark-core_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.iceberg:iceberg-spark-runtime-3.3_2.13:${icebergVersion}")
    testScala213Implementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testScala213Implementation("org.assertj:assertj-core:${assertjVersion}")
    testScala213Implementation("org.mockito:mockito-core:${mockitoVersion}")
    testScala213Implementation("org.mockito:mockito-inline:${mockitoVersion}")
    testScala213Implementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
}
