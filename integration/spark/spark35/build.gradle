plugins {
    id("io.openlineage.common-java-config")
    id("io.openlineage.print-source-set-configuration")
    id("io.openlineage.scala213-variant")
    id("io.openlineage.standard-spotless")
    id("io.freefair.lombok") version "8.4"
}

lombok {
    version = "1.18.30"
}

ext {
    assertjVersion = "3.25.1"
    junit5Version = "5.10.1"
    mockitoVersion = "4.11.0"
    sparkVersion = "3.5.0"
    jacksonVersion = "2.15.3"
    lombokVersion = "1.18.30"
    bigqueryVersion = "0.29.0"
}

configurations.configureEach {
    it.exclude(group: "org.apache.avro", module: "avro-mapred")
    it.exclude(group: "org.pentaho", module: "pentaho-aggdesigner-algorithm")
}

dependencies {
    // Scala 2.12
    implementation(project(":shared"))
    implementation(project(":spark3"))

    compileOnly("org.apache.spark:spark-core_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    compileOnly("org.scala-lang.modules:scala-collection-compat_2.12:2.11.0")
    compileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "com.fasterxml.jackson.module"
        exclude group: "com.sun.jmx"
        exclude group: "com.sun.jdmk"
        exclude group: "javax.jms"
    }

    testImplementation("org.apache.spark:spark-core_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    testImplementation("org.scala-lang.modules:scala-collection-compat_2.12:2.11.0")
    testImplementation("com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "com.fasterxml.jackson.module"
        exclude group: "com.sun.jmx"
        exclude group: "com.sun.jdmk"
        exclude group: "javax.jms"
    }
    testImplementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation("org.mockito:mockito-inline:${mockitoVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")

    // Scala 2.13
    scala213Implementation(project(path: ":shared", configuration: "scala213RuntimeElements"))
    scala213Implementation(project(":spark3"))

    scala213CompileOnly("org.apache.spark:spark-core_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    scala213CompileOnly("org.scala-lang.modules:scala-collection-compat_2.13:2.11.0")
    scala213CompileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_2.13:${bigqueryVersion}") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "com.fasterxml.jackson.module"
        exclude group: "com.sun.jmx"
        exclude group: "com.sun.jdmk"
        exclude group: "javax.jms"
    }

    testScala213Implementation("org.apache.spark:spark-core_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    testScala213Implementation("org.scala-lang.modules:scala-collection-compat_2.13:2.11.0")
    testScala213Implementation("com.google.cloud.spark:spark-bigquery-with-dependencies_2.13:${bigqueryVersion}") {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: "com.fasterxml.jackson.module"
        exclude group: "com.sun.jmx"
        exclude group: "com.sun.jdmk"
        exclude group: "javax.jms"
    }
    testScala213Implementation("org.assertj:assertj-core:${assertjVersion}")
    testScala213Implementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testScala213Implementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
    testScala213Implementation("org.mockito:mockito-core:${mockitoVersion}")
    testScala213Implementation("org.mockito:mockito-inline:${mockitoVersion}")
}
